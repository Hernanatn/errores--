name: Pruebas

on:
  push:
    branches: [ main ]
    paths:
      - '**.hpp'
      - '**.cpp'
  pull_request:
    branches: [ main ]
    paths:
      - '**.hpp'
      - '**.cpp'

jobs:
  construir-y-probar:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Instalar Ninja
      run: |
        choco upgrade ninja
    
    - name: Configurar Clang y CMake
      run: |
        choco upgrade llvm
        echo "CMake version: $(cmake --version)"
        echo "Clang version: $(clang --version)"
        cmake -S . -B build -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++  -DCMAKE_CXX_STANDARD=20 -G "Ninja"

    - name: Compilar
      run: |
        cmake --build build

    - name: Ejecutar Pruebas
      id: ejecutar_pruebas
      run: |
        build\correr_pruebas.exe -s

    - name: Publicar Resultados de Pruebas (en caso de fallos)
      if: failure()
      run: |
        echo "Resultados de las pruebas:"
        type build\Testing\Temporary\LastTest.log

    - name: Actualizar Descripción de PR o Commit
      uses: actions/github-script@v6
      with:
        script: |
          const core = require('@actions/core');
          const github = require('@actions/github');
          
          // Determine the outcome of the 'Ejecutar Pruebas' step
          const testOutcome = github.context.payload.workflow_run.conclusion === 'success' ?
                              '✔ Todas las pruebas pasaron correctamente.' :
                              '❌ Las pruebas fallaron.';
          const comment = `Resultado de las pruebas:\n\n${testOutcome}`;
          
          // Update PR description if it's a PR
          if (github.context.payload.pull_request) {
            await github.rest.pulls.update({
              ...github.context.repo,
              pull_number: github.context.payload.pull_request.number,
              body: (github.context.payload.pull_request.body || '') + `\n\n${comment}`,
            });
          } else {
            // Add a commit status message for direct commits
            await github.rest.repos.createCommitStatus({
              ...github.context.repo,
              sha: github.context.sha,
              state: testOutcome.includes('✔') ? 'success' : 'failure',
              description: testOutcome,
              context: 'Resultados de las pruebas',
            });
          }