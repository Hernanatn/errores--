name: Pruebas

on:
  push:
    branches: [ main ]
    paths:
      - '**.hpp'
      - '**.cpp'
  pull_request:
    branches: [ main ]
    paths:
      - '**.hpp'
      - '**.cpp'

jobs:
  construir-y-probar:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
     - name: Clonar Catch2
      run: git clone https://github.com/catchorg/Catch2.git externos/Catch2
    - name: Compilar
      run: |
        cmake -S . -B build -DCATCH2_DIR="${GITHUB_WORKSPACE}/externos/Catch2"
        cmake --build build
    - name: EjecutarPruebas
      id: test
      run: |
        build\correr_pruebas.exe -s
    - name: VerificarResultadosPruebas
      if: steps.test.outcome != 'success'
      run: |
        echo "::set-output name=test_output::$(cat $GITHUB_WORKSPACE/build/Testing/Temporary/LastTest.log)"
    - name: EstablecerEstadoPR
      uses: actions/github-script@v6
      with:
        script: |
          const result = ${{ steps.test.outcome }};
          const output = result == 'success' ? 'Las pruebas pasaron correctamente' : context.workflow.steps.check_test_result.outputs.test_output;
          github.rest.repos.createCommitStatus({
            ...context.repo,
            sha: context.sha,
            state: result,
            description: output,
            context: 'Resultados de las pruebas'
          });
    - name: Determinar Estado de la Prueba
      run: |
        if [[ ${{ steps.test.outcome }} == 'success' ]]; then
          echo "exitoso" > estado_prueba.txt
        else
          # Agrega tu lógica aquí para determinar "mediocre" o "fallido" 
          # en función de la salida de la prueba
          # Por ejemplo, verifica el número de pruebas fallidas en la salida
          echo "fallido" > estado_prueba.txt 
        fi
    - name: Subir Artefacto
      uses: actions/upload-artifact@v3
      with:
        name: estado-prueba
        path: estado_prueba.txt